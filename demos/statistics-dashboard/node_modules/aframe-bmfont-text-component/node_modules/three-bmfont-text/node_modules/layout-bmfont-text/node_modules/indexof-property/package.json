{
  "name": "indexof-property",
  "version": "1.1.1",
  "description": "optimized indexof for a known property",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {
    "tape": "~2.13.2"
  },
  "scripts": {
    "test": "node test.js"
  },
  "testling": {
    "files": "test.js",
    "browsers": [
      "ie/6..latest",
      "chrome/22..latest",
      "firefox/16..latest",
      "safari/latest",
      "opera/11.0..latest",
      "iphone/6",
      "ipad/6",
      "android-browser/latest"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/indexof-property.git"
  },
  "homepage": "https://github.com/mattdesl/indexof-property",
  "bugs": {
    "url": "https://github.com/mattdesl/indexof-property/issues"
  },
  "keywords": [
    "index",
    "of",
    "indexof",
    "find",
    "search",
    "array",
    "list",
    "property",
    "indexOfProperty",
    "index-of"
  ],
  "readme": "# indexof-property\n\n[![frozen](http://badges.github.io/stability-badges/dist/frozen.svg)](http://github.com/badges/stability-badges)\n\nCompiles an optimized indexof function for a known property. \n\n```js\n//let's search for the 'name' property\nvar indexOf = require('indexof-property')('name')\n\nvar list = [\n\t{ name: 'foo', data: 5 },\n\t{ name: 'bar', data: 10 },\n\t{ name: 'beep', data: 0 },\n\t{ name: 'foobar', data: -5 },\n\t{ name: 'beep', data: 20 }\n]\n\n// prints 2\nconsole.log( indexOf(list, 'beep') )\n\n// prints -1\nconsole.log( indexOf(list, 'blah') )\n\n// prints 4\nconsole.log( indexOf(list, 'beep', 3) )\n```\n\nThe function compiles with bracket notation to support unusual property names, e.g. `\"border-radius\"`.\n\n## Usage\n\n[![NPM](https://nodei.co/npm/indexof-property.png)](https://nodei.co/npm/indexof-property/)\n\n#### `require('indexof-property')(property)`\n\nCompiles a new function that searches for the specified `property` name. The new function has the signature:\n\n```i = indexOf(array, value[, start])```\n\nWhich searches for the first strictly equal match to `value` and returns that index, or -1 if none was found. The `start` index defaults to zero if unspecified.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/mattdesl/indexof-property/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "indexof-property@1.1.1",
  "dist": {
    "shasum": "2def4b5bca75ac44443f66b5f1ba013914733dbd"
  },
  "_from": "indexof-property@^1.1.1",
  "_resolved": "https://registry.npmjs.org/indexof-property/-/indexof-property-1.1.1.tgz"
}
