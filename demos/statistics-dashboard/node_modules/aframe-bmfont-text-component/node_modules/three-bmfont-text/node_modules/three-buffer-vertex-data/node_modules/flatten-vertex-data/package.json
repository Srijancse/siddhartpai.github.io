{
  "name": "flatten-vertex-data",
  "version": "1.0.0",
  "description": "flattens nested vertex data into a typed array",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {
    "array-pack-2d": "^0.1.1",
    "dtype": "^2.0.0",
    "is-typedarray": "^1.0.0"
  },
  "devDependencies": {
    "faucet": "0.0.1",
    "standard": "^5.3.1",
    "tape": "^4.2.1"
  },
  "scripts": {
    "test": "standard && node test.js | faucet"
  },
  "keywords": [
    "dtype",
    "flat",
    "flatten",
    "pack",
    "array",
    "type",
    "typed",
    "typedarray",
    "vert",
    "vertex",
    "webgl",
    "gl",
    "glsl",
    "shader",
    "buffer"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/glo-js/flatten-vertex-data.git"
  },
  "homepage": "https://github.com/glo-js/flatten-vertex-data",
  "bugs": {
    "url": "https://github.com/glo-js/flatten-vertex-data/issues"
  },
  "readme": "# flatten-vertex-data\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nCopies flat or nested array data into the specified typed array, or a new typed array. Intended to be used for WebGL buffers. If the input is nested array data, this guesses the dimensionality based on the length of the first sub-array.\n\n## Install\n\n```sh\nnpm install flatten-vertex-data --save\n```\n\n## Example\n\nAccepts a [dtype string](https://www.npmjs.com/package/dtype) (creating a new array) or an output typed array to re-use. Defaults to creating a new Float32Array.\n\n```js\nvar flatten = require('flatten-vertex-data')\n\nvar positions = [ [x1, y1], [x2, y2], [x3, y3] ]\n\nflatten(positions)\n//=> new Float32Array([ x1, y1, x2, y2, x3, y3 ])\n\nflatten(positions, 'uint16')\n//=> new Uint16Array([ x1, y1, x2, y2, x3, y3 ])\n\n// flatten & copy positions into output\nvar output = new Uint16Array(positions.length * 2)\nflatten(positions, output)\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/flatten-vertex-data.png)](https://www.npmjs.com/package/flatten-vertex-data)\n\n#### `output = flatten(data, [output|type], [offset])`\n\nCopies flat or nested arrays into a typed array, where `data` can be:\n\n- a nested array like `[ [ x, y ], [ x, y ] ]`\n- a flat array like `[ x, y, z, x, y, z ]`\n- a typed array like `new Float32Array([ x, y ])`\n\nThe second parameter can be a `type` string for [dtype](https://www.npmjs.com/package/dtype), which creates a new array. Or, it can be an existing typed array to re-use as the `output` destination. It defaults to `'float32'` (a new Float32Array).\n\nReturns the `output` typed array.\n\nThe third parameter, `offset`, can be a number (default 0), the index in the destination array at which to start copying the `data`. If a new array is being created, its capacity will be expanded to fit `dataLength + offset` (i.e. it will have leading zeros).\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/glo-js/flatten-vertex-data/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "flatten-vertex-data@1.0.0",
  "dist": {
    "shasum": "034d2ba91c03bd27d6cab0500d41e767f12230a2"
  },
  "_from": "flatten-vertex-data@^1.0.0",
  "_resolved": "https://registry.npmjs.org/flatten-vertex-data/-/flatten-vertex-data-1.0.0.tgz"
}
