{
  "name": "quad-indices",
  "version": "2.0.1",
  "description": "creates the indices for a quad (two triangles)",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {
    "an-array": "^1.0.0",
    "dtype": "^2.0.0",
    "is-buffer": "^1.0.2"
  },
  "devDependencies": {
    "buffer-equals": "^1.0.3",
    "tape": "^3.5.0"
  },
  "scripts": {
    "test": "node test.js"
  },
  "keywords": [
    "quad",
    "gl",
    "stack.gl",
    "ecosystem:stackgl",
    "mesh",
    "cells",
    "elements",
    "indicesindex",
    "indexed",
    "sprite",
    "batch",
    "vertices"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/Jam3/quad-indices.git"
  },
  "homepage": "https://github.com/Jam3/quad-indices",
  "bugs": {
    "url": "https://github.com/Jam3/quad-indices/issues"
  },
  "readme": "# quad-indices\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nCreates the indices for a quad mesh (two triangles), ideal for sprites, 2D lines, font glyphs, billboards, and other features. \n\n```js\nvar createIndices = require('quad-indices')\n\n//basic usage:\nvar quad = createIndices()\n// --> new Uint16Array([0, 1, 2, 0, 2, 3])\n\n//N quads, array type:\nvar quad = createIndices({ count: 2, type: 'array' })\n// --> [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7]\n\n//counter-clockwise\nvar quad = createIndices({ clockwise: false })\n// --> new Uint16Array([0, 1, 2, 2, 1, 3])\n\n//store in existing array\nvar array = new Uint16Array(12)\ncreateIndices(array, { start: 6 })\n// --> new Uint16Array([0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 2, 3])\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/quad-indices.png)](https://www.npmjs.com/package/quad-indices)\n\n#### `quad = createIndices([array], [opt])`\n\nCreates the indices for a quad mesh. Both parameters are optional.\n\nIf `array` is provided and is a Buffer or array-like object, it will be used as output instead of creating a new object.\n\nPossible options:\n\n- `count` the number of quads to index, default 1\n- `type` (string) the [dtype](https://www.npmjs.com/package/dtype) of the returned array, default '\"uint16\"'\n- `clockwise` (boolean) the orientation of the indices, default true\n- `start` the starting index to place the data into the array, default 0\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/Jam3/quad-indices/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "quad-indices@2.0.1",
  "dist": {
    "shasum": "193f9e1f5d2197d4a41eb67efbc509bc7f3704ab"
  },
  "_from": "quad-indices@^2.0.1",
  "_resolved": "https://registry.npmjs.org/quad-indices/-/quad-indices-2.0.1.tgz"
}
